{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aCAaC,EAAO,CAElBC,OAAQC,SAASC,cAAc,QAC/BC,iBAAkBF,SAASC,cAAc,sBACzCE,gBAAiBH,SAASC,cAAc,qBAExCG,OAAQJ,SAASC,cAAc,SAE/BI,WAAYL,SAASC,cAAc,sBACnCK,OAAQN,SAASC,cAAc,mBAC/BM,QAASP,SAASC,cAAc,oBAChCO,UAAWR,SAASC,cAAc,sBAClCQ,UAAWT,SAASC,cAAc,sBAClCS,QAASV,SAASC,cAAc,qBCuB3B,SAASU,EAAWC,GACzB,IAAMC,EAAU,GAKhB,OAJiB,IAAIC,SAASF,EAAMG,eAC3BC,SAAQ,SAACC,EAAOC,GACvBL,EAAQK,GAAOD,C,IAEVJ,C,CAGF,SAASM,EAAcC,EAAUC,GACxC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAM,CACVR,WACAC,SAEFQ,YAAW,WACLJ,EACFF,EAAQK,GAERJ,EAAOI,E,GAERP,E,IFpDPvB,EAAKM,OAAO0B,iBAAiB,UAE7B,SAAiBlB,GACfA,EAAMmB,iBAIN,IAHA,IAAMC,EAAUrB,EAAWC,GACrBqB,EAAQC,OAAOF,EAAQX,OAEpBc,EAAI,EAAGA,EAAID,OAAOF,EAAQI,QAASD,IAAK,CAC/C,IAAME,EAAMJ,EAASC,OAAOF,EAAQM,KAAOH,GACxBhB,EAAcgB,EAAGE,GAEjCE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAAC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE9DwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACdyB,EAAAlD,GAAS8C,OAAOK,QAAQ,sBAAqCH,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js","src/js/refs.js","src/js/helpers.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { createData } from './helpers';\nimport { createPromise } from './helpers';\nimport { refs } from './refs';\n\nrefs.formEl.addEventListener('submit', setLoop);\n\nfunction setLoop(event) {\n  event.preventDefault()\n  const dataObj = createData(event);\n  const delay = Number(dataObj.delay);\n\n  for (let i = 0; i < Number(dataObj.amount); i++) {\n    const sum = delay + (Number(dataObj.step * i));\n    const newPromise = createPromise(i, sum);\n    newPromise\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n          });\n  }\n}\n","export const refs = {\n  //color switcher\n  bodyEl: document.querySelector('body'),\n  btnStartSwitchEl: document.querySelector('button[data-start]'),\n  btnStopSwitchEl: document.querySelector('button[data-stop]'),\n  //promises\n  formEl: document.querySelector('.form'),\n  //timer\n  btnStartEl: document.querySelector('button[data-start]'),\n  daysEl: document.querySelector('span[data-days]'),\n  hoursEl: document.querySelector('span[data-hours]'),\n  minutesEl: document.querySelector('span[data-minutes]'),\n  secondsEl: document.querySelector('span[data-seconds]'),\n  inputEl: document.querySelector('#datetime-picker'),\n};\n","import { refs } from \"./refs\";\n\n//color swither:\nexport function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n\n//timer:\nexport function addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nexport function convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n  return { days, hours, minutes, seconds };\n}\n\nexport function updateInterface({ days, hours, minutes, seconds }) {\n  refs.daysEl.textContent = days;\n  refs.hoursEl.textContent = hours;\n  refs.minutesEl.textContent = minutes;\n  refs.secondsEl.textContent = seconds;\n}\n\n//promises:\nexport function createData(event) {\n  const newData = {};\n  const formData = new FormData(event.currentTarget);\n  formData.forEach((value, key) => {\n    newData[key] = value;\n  });\n  return newData;\n}\n\nexport function createPromise(position, delay) {\nreturn new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const obj = {\n      position, \n      delay,\n    };\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        reject(obj);\n      }\n    }, delay); \n  });\n  ;\n}\n\n"],"names":["$6JpON","parcelRequire","$37e33676934ad046$export$21666b427502ea6d","bodyEl","document","querySelector","btnStartSwitchEl","btnStopSwitchEl","formEl","btnStartEl","daysEl","hoursEl","minutesEl","secondsEl","inputEl","$77eae7726dbdfc03$export$773d79863eecfeab","event","newData","FormData","currentTarget","forEach","value","key","$77eae7726dbdfc03$export$5a1eb20c68656e88","position","delay","Promise","resolve","reject","shouldResolve","Math","random","obj","setTimeout","addEventListener","preventDefault","dataObj","delay1","Number","i","amount","sum","step","then","param","$h6c0i","Notify","success","concat","catch","$parcel$interopDefault","failure"],"version":3,"file":"03-promises.03f27c92.js.map"}